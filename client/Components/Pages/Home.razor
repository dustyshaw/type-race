@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using client.Components.IndivComponents
@using client.Data
@rendermode InteractiveServer
@inject NavigationManager NavigationManager;

<PageTitle>Clash of Keys</PageTitle>

<h1 class="jacquard-24-regular">Clash of Keys</h1>

@if (!joined)
{
    <input @bind-value="newPlayerName" />
    <button @onclick="Send" class="btn-primary">Join</button>
}
else
{
    <TheList Players="allPlayers" />
}

@code {
    private string newPlayerName = "";
    private HubConnection? hubConnection;
    private List<Player> allPlayers = new List<Player>();

    private bool joined = false;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/playerhub"))
            .Build();

        hubConnection.On<UpdatedPlayersListMessage>("BroadcastPlayers", (updatedPlayersList) =>
        {
            allPlayers = updatedPlayersList.UpdatedPlayers;
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();

        await AskForPlayers();
    }

    private async Task AskForPlayers()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("GetPlayers");
        }
    }

    private async Task Send()
    {
        if (hubConnection is not null && !string.IsNullOrWhiteSpace(newPlayerName))
        {
            await hubConnection.SendAsync("ConnectPlayer", newPlayerName);
        }
        joined = true;
    }

    public bool IsConnected =>
        hubConnection?.State == HubConnectionState.Connected;
}
